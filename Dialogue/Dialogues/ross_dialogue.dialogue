~ start
if not DSM.has_completed_first_inter("Ross", false):
	=> first_interaction
# from here on means complete first interaction already
if not DSM.has_completed_sidequest("Ross"):
	=> interaction_without_sidequest
# from here on means complete first interaction and also sidequest already
if DSM.has_completed_first_inter("Ross", true):
	=> first_interaction_with_sidequest
else:
	=> repeat_interaction_with_sidequest
=> END

~ first_interaction
Ross: Hi there, customer! Would you like to try the new special in the house?
Robot: ...
Ross: Oh, you’re a robot. My bad then. What are you doing here?
Robot: ...
Ross: Okay you don’t speak. Are you some kind of errand bot? Although the big sword on your back makes me think otherwise...
Ross: Tell ya what, there’s this package that I’ve ordered but I can’t really get it because of some... circumstances. Do you think you could help me get it?
Ross: You won’t be doing it for free either. There’s this little device I picked up from nearby that I think you’d like. Whaddya say, tin man?
Robot: ...
Ross: Well, come find me if you decide to pick up my package near the garbage bin over there.
do DSM.finish_first_inter("Ross", false)
=> END

~ interaction_without_sidequest
Ross: Hey there. You got my package?
Robot: ...
Ross: That’s alright. No biggie.
=> END

~ first_interaction_with_sidequest
Ross: Aw SWEET! Now I can finally watch that new movie that was released outside! Stupid government and their censorship, and the dumba** police getting in my way...
Robot: ...
Ross: Oh crap! Hey robot, you didn’t hear anything alright. Just take this thumbdrive and be on your way.
Robot: ...
Ross: Though... thanks for helping me out with this. I appreciate it, robot. Hop by my place sometime and watch some movies. Not the crap the government feeds us. Some real films and movies from outside.
Robot: ... :o
do DSM.finish_first_inter("Ross", true)
=> END

~ repeat_interaction_with_sidequest
Ross: Yo robot! How’s that module from the thumbdrive coming along?
Robot: ...
Ross: Yea, I know. It’s a pretty good module.
=> END
